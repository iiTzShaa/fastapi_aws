name: Fast API CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Step-1 Install Python 3.8
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # Step-2 Install Python Virtual Environment
      - name: Install Python Virtual Environment
        run: pip3 install virtualenv

      # Step-3 Create Virtual Environment Cache
      - name: Cache virtualenv
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      # Step-4 Install dependencies (only if cache is missed)
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      # Step-5 Run tests (only if dependencies are installed)
      - name: Run tests
        run: |
          source venv/bin/activate
          pytest tests/
        if: steps.cache-venv.outputs.cache-hit != 'true'

      # Step-6 Create archive of dependencies
      - name: Create archive of dependencies
        run: |
          cd ./venv/lib/python3.8/site-packages
          zip -r9 ${GITHUB_WORKSPACE}/api.zip .

      # Step-7 Add API files to Zip file
      - name: Add API files to Zip file
        run: |
          cd ./api && zip -g ../api.zip -r .

      # Step-8 Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: api
          path: ./api.zip
